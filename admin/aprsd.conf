# $Id$
# aprsd configuration
#
#
# *** PLEASE READ ***
#
#  Modify this file to reflect _your_ configuration!
#
#
# The configuration file format has changed.  Most of the file should
# be well documented.  Note that when a parameter is defined as a comma
# demlimited list don't use any spaces (example "item1,item2,etc.")


# Server configuration parameters
[server]
# Servercall is the ax25 source call used in packets
# sent from the server to Internet users. (9 chars max)
# Note: Does not go out on the air.
#
servercall = testAPRSD

# MyCall will be over written by the MYCALL string in INIT.TNC
# if "tncport" has been defined.
#
mycall = "NOCALL"
mylocation = "Anytown"

# This email address will be sent in replies to ?IGATE? queries.
# Also, it will be on the status web pages on port 14501.
myemail = "you@yourdomain.com"

# The PASS command.  The callsign supplied in MyCall and this
# passcode allow you to send data to distant servers.
# PASS can be computed from MYCALL with the aprspass program.
# Note: This example is invalid. Use your passcode.
#
pass = 99999

# Allow the insecure aprs passcodes to be used
# Note: "no" means all users need Linux user names and passwords
#       and aprsd must be run as root for that to work.
allowaprspass = yes

# Set MaxUsers and MaxLoad to values that your Internet connection
# can support. Set MaxLoad in bytes/sec.   If either value is exceeded
# new users can't connect.
maxusers = 150
maxload = 10000000

# Define beacon text. The server will supply the ax25 path header.
# The first number after "NetBeacon" is the time interval in minutes.
# Comment out the line or set time interval to 0 to disable beacon.
# The rest of the line can be any aprs protocol conforming packet.
netbeacon = "!0000.00NI00000.00W& APRS Server"
netbeaconinterval = 10

# Set history list items to expire in 35 minutes
historyexpire = 15

# Set history-allow to NO if you do not want users to get history dumps.
historydump = no

# Define server listen ports
# Read ports.html for more info.
#
rawtncport = 14580
localport = 14579
mainport = 10151
mainportnohistory = 23
linkport = 1313
messageport = 1314
udpport = 1315
sysopport = 14500
httpport = 14501
ipwatchport = 14502
errorport = 14503
omniport = 14600

# define trusted users of the UDP port.
# usage: trust = "<ip address> <subnet mask>"
#udptrusted =

# TRACE causes the server to append its own callsign to the end
# of the AX25 path of every packet processed.
# To conserver bandwidth this should only be
# done for short periods to track sources of problems.
trace = no

# Where to put log files
logdir = "/var/log/"

#-------------------------------
# Server connection definitions
#
# usage:
# serverX = "<host name> < host port> <TYPE-DIR> <optional OmniPort filter command>"
#
# The TYPE-DIR field sets the connecton type and data flow.
# TYPE is  either "SERVER" or "HUB"
# SERVER connections attempts to maintain a connection to the designated host
# HUB connections maintain a connection to only ONE hub and rotate to the next
# if the connectin fails.
# DIR is either "RO" or "SR"  RO is Receive Only. SR is Send and Receive.
# Eamples: HUB-RO   HUB-SR  SERVER-RO SERVER-SR
# If you select -SR to send data you must also supply a passcode
# using the "PASS" command. See above.
#
# These commands are NOT case sensitive.
# ** Defaults to Server-RO if TYPE-DIR not specified. **
#
#
# Example Receive-Only HUB connecton
# server1 = "first.aprs.net 23 hub-ro"
#
# Example Send-Receive SERVER connection.  The SERVER type maintains a connection to
# the specified server.  No rotation.
# server1 = "first.aprs.net 23 server-sr"
#
# Example of OmniPort connection to receive the local stream (tnc).
# Note: OmniPort is currently available only on aprsd 2.1.5
#
# server1 = "atlanta.aprs.net 14600 server-ro portfilter(local)"
#
# Receive the full stream.
# server1 = "atlanta.aprs.net 14600 server-ro portfilter(full)"
#
#server1 = "first.aprs.net,1313,server-ro"
#server1 = "rotate.aprs.net,23,hub-sr"
server1 = "first.aprs.net,23,hub-sr"
server2 = "second.aprs.net,23,hub-sr"
server3 = "third.aprs.net,23,hub-sr"
server4 = "fourth.aprs.net,23,hub-sr"

#
# Display server stats.  Requires working Mrtg, etc.
#
serverstats = yes
serverstatslink = "http://link.to.your/stats"




# IGATE configuration parameters
[igate]
# Set filterNoGate "yes" to block RFONLY and NOGATE packets
filternogate = yes

# Define the path for transmitted packets
# This is only used when using Linux sockets, not the TNC.
# For the TNC, set this in INIT.TNC. Note the format is
# slightly different to the TNC command.
aprspath = "APRS v WIDE"

# Allow Internet to RF message passing.
rfallow = yes

# Set this to 'yes' if you want to log ALL PACKETS heard on RF to rf.log
# If 'no' then only packets with your callsign will be logged.
# See logdir
logallrf = yes

# Define the TNC beacon. The TNC will supply the ax25 path header.
# It's optional and you may use the TNC BTEXT in the INIT.TNC file instead.
#
tncbeacon = "!3000.00N/00000.00W& Linux APRS Server"
tncbeaconinterval = 10

# Define the TNC serial port and baud rate.
# Note: This device must have write permissions
# If undefined all TNC related functions are disabled.
# Permissable baud rates are 1200,2400,4800,9600 and 19200.
#
#tncport = "/dev/ttyS0"
#tncport = "/dev/ttyUSB0"
#tncbaud = 1200
#tncbaud = 9600
#tncpacketspacing = 1500

# Send 2 extra message acks is addition to each received ack to TNC
# Range 0 to 9
ackrepeats = 2

# Send extra acks at 5 second intervals
# Range 1 to 30 seconds
ackrepeattime = 5

# Disallow packets transmitted from our own TNC from
# being igated back to the Internet after being digipeated.
igatemycall = no

# Selected call signs which are always gated to RF
# if they are not seen locally. All packets from
# these are gated in real time. Do not use unless
# you really need real time data.  Consider posit2rf below.
# They are not case sensitive.
#
# ^K4HG([-][0-9])

gatetorf = "^K4HG"

# Call signs of stations whose posits are gated
# to RF every 15 minutes.  Only posit packets are
# gated.  Posits are taken from the history list.
# They are case sensitive! Use upper case.
#

posittorf = "K4HG-8"

# Define a list of message destination call signs or aliases
# to gate to RF full time.  Note: the CQGA example
# below is CQ GA (Georgia). Edit to suite your locale.
# Up to 64 of these may be defined. They are case sensitive.
#

msgdesttorf = "SCOUTS,KIDS,CQGA"

